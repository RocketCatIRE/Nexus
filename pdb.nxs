{"name":"pdb","enabled":true,"description":"A database for props","type":"group","id":1,"items":[{"type":"function","name":"onGMCP","enabled":true,"id":2,"code":"//Enter the function here\n//Char.Items.List { \"location\": \"room\", \"items\": [ { \"id\": \"2913\", \"name\": \"a broad and heavy bench\" }, { \"id\": \"2914\", \"name\": \"a massive syncrete post\" }, { \"id\": \"2915\", \"name\": \"a recessed doorway\" }, { \"id\": \"2916\", \"name\": \"a broad and heavy bench\" }, { \"id\": \"8870\", \"name\": \"a rakish Tukkav speeder pilot\", \"attrib\": \"mx\" }, { \"id\": \"8871\", \"name\": \"a laconic Shen speeder pilot\", \"attrib\": \"mx\" }, { \"id\": \"58309\", \"name\": \"a recessed doorway\" } ] }\n\nvar m = args.gmcp_method;\nvar r = args.gmcp_args;\n\nif (!(m == \"Char.Items.List\")) return;\nif (!('items' in r)) return;\npdb.items = r['items'];\nfor (var i = 0, noe = pdb.items.length; i < noe; i++) {\n\tif ('attrib' in pdb.items[i]) continue;\n    var found = false;\n    if (pdb.items[i]['name'] in pdb.props) found = true;\n    if (found) continue;\n    pdb.props[pdb.items[i].name] = {'cover':null,'climb':null};\n\tpdb.hardSave();\n    if (pdb.reporting) pdb.report('Loaded ' + pdb.items[i].name + ' to pdb');\n}\nif (pdb.reporting) {\n    for (var i = 0, noe = pdb.items.length; i < noe; i++) {\n        if (pdb.items[i]['name'] in pdb.props) {\n            pdb.display(pdb.items[i]['name']);\n        }\n    }\n}"},{"type":"function","name":"onLoad","enabled":true,"id":3,"code":"pdb = {};\npdb.props = get_variable('pdb.props') || {};\npdb.reporting = false;\npdb.climbTest = false;\npdb.climbingProp = '';\n\npdb.setCover = function (prop, cover) {\n\tif (prop in pdb.props) {\n        pdb.props[prop].cover = cover;\n        if (pdb.reporting) pdb.report(prop + ' cover set to ' + pdb.coemph(pdb.props[prop].cover));\n        pdb.hardSave();\n    } else {\n        pdb.error('No prop \"'+prop+ '\" found in pdb');\n    }\n}\npdb.setClimb = function(prop, climb) {\n\tif (prop in pdb.props) {\n        pdb.props[prop].climb = climb;\n        if (pdb.reporting) pdb.report(prop + ' climb set to ' + pdb.coemph(pdb.props[prop].climb));\n        pdb.hardSave();\n    } else {\n        pdb.error('No prop \"'+prop+ '\" found in pdb');\n    }\n}\n\n\npdb.display = function(prop) {\n\tif (prop in pdb.props) {\n        var coverReport = ''\n        var climbReport = ''\n        if (pdb.props[prop].climb == null) {\n            climbReport = pdb.coerr(pdb.props[prop].climb)\n        } else if (pdb.props[prop].climb){\n            climbReport = pdb.coemph(pdb.props[prop].climb)\n        } else {\n            climbReport = pdb.cofalse(pdb.props[prop].climb)\n        }\n        if (pdb.props[prop].cover == null) {\n            coverReport = pdb.coerr(pdb.props[prop].cover)\n        } else if (pdb.props[prop].cover){\n            coverReport = pdb.coemph(pdb.props[prop].cover)\n        } else {\n            coverReport = pdb.cofalse(pdb.props[prop].cover)\n        }\n    \tpdb.report(prop + ' can cover: ' + coverReport + ' can climb: ' + climbReport)\n    } else {\n        pdb.error('No prop \"'+prop+ '\" found in pdb');\n    }\n}\npdb.displayHere = function() {\n    for (var i = 0, noe = pdb.items.length; i < noe; i++) {\n        if (pdb.items[i]['name'] in pdb.props) {\n            pdb.display(pdb.items[i]['name'])\n        }\n    }\n}\npdb.displayAll = function() {\n    for (key in pdb.props) {\n        pdb.display(key);\n    }\n}\n\npdb.hardSave = function() {\n\tset_variable('pdb.props', pdb.props);\n    if (pdb.reporting) pdb.report('pdb saved');\n}\npdb.options = {\n    tag : '&Lang;   pdb   &Rang;',\n    tagc : 'rgb(66, 244, 89)',\n    msgc : 'rgb(224, 255, 241)',\n    emphc: 'rgb(0, 198, 16)',\n    falc: 'rgb(163, 163, 163)',\n    errc: 'rgb(255, 103, 76)',\n};\n\n\n    \npdb.report = function(msg) { pdb.owWrite('#output_main', '<div style=\"color: ' + pdb.options.tagc + ';\">' + pdb.options.tag + ': <span style=\"color: ' + pdb.options.msgc + ';\">' + msg + '</span></div>') };\npdb.error = function(msg) {pdb.report(pdb.coerr(msg));}\npdb.verb = function(msg) {if(pdb.verbose){pdb.report(msg);}},\npdb.coemph = function(str) {return '<span style=\"color:'+pdb.options.emphc+';\"/>'+str+'</span>';}\npdb.coerr = function(str) {return '<span style=\"color:'+pdb.options.errc+';\"/>'+str+'</span>';}\npdb.cofalse = function(str) {return '<span style=\"color:'+pdb.options.falc+';\"/>'+str+'</span>';}\n\npdb.owWrite = function(selector, text) {\n    if (text.trim() == \"\") return;\n\n    // doing these updates asynchronously to minimize reflows when under heavy load\n    window.requestAnimationFrame(function() {\n        var hooks = $.cssHooks;\n        $.cssHooks = {};\n\n        var output = client.document.querySelectorAll(selector + ' .output')[0];\n        var newel = document.createElement('div');\n        newel.innerHTML = text;\n        newel.className = 'line';\n        newel.id = 'msg' + num_msgs;\n        output.appendChild(newel);\n        if(client.logging){append_to_log(newel.innerHTML);}\n\n        var scrollback = client.document.querySelectorAll(selector + ' .output_scrollback')[0];\n        newel = document.createElement('div');\n        newel.className = 'line';\n        newel.innerHTML = text;\n        newel.id = 'sb_msg' + num_msgs;\n        scrollback.appendChild(newel);\n\n        trim_ow(selector);\n\n        num_msgs++;\n        scrollback_num_msgs++;\n\n        if (selector === '#output_main') {\n           if (no_prompts || gag_prompts) {\n               var el = client.document.querySelectorAll('#output_main .prompt');\n               for (var i = 0; i < el.length; i++) el[i].style.display = 'none';\n               // last prompt shown?\n               if ((!no_prompts) && el.length > 0)\n                   el[el.length - 1].style.display = 'block';\n           }\n           if (show_timestamps) {\n               var el = client.document.querySelectorAll('#output_main .output #msg'+(num_msgs-1)+' .timestamp');\n               for (var i = 0; i < el.length; i++) el[i].classList.remove('no_out');\n           }\n           if (show_scroll_timestamps) {\n               var el = client.document.querySelectorAll('#output_main .output_scrollback #sb_msg'+(num_msgs-1)+' .timestamp');\n               for (var i = 0; i < el.length; i++) el[i].classList.remove('no_out');\n           }\n        }\n\n        output.scrollTop = output.scrollHeight;\n\n        $.cssHooks = hooks;\n    });\n\n};\n\npdb.report('Prop database loaded. Type \"pdb\" for options.');\n    "},{"type":"trigger","name":"","enabled":true,"id":4,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You cannot take cover behind (.+)\\.","actions":[{"action":"script","script":"pdb.setCover(args[1], false)"}]},{"type":"trigger","name":"","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You vault over (.+) and take cover behind it\\.","actions":[{"action":"script","script":"//Enter the script here\npdb.setCover(args[1], true)"}]},{"type":"trigger","name":"","enabled":true,"id":7,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You take cover behind (.+).","actions":[{"action":"script","script":"//Enter the script here\npdb.setCover(args[1], true)"}]},{"type":"trigger","name":"","enabled":true,"id":9,"matching":"regexp","whole_words":true,"case_sensitive":false,"text":"You dive behind (.+)\\.","actions":[{"action":"script","script":"//Enter the script here\npdb.setCover(args[1], true)"}]},{"type":"alias","name":"","enabled":true,"id":6,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"pdb.displayAll();"}],"text":"pdb all"},{"type":"alias","name":"","enabled":true,"id":12,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"pdb.displayHere();"}],"text":"pdb here"},{"type":"alias","name":"","enabled":true,"id":10,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\npdb.climbTest = true;\npdb.climbingProp = args[1];\npdb.report('Testing whether we can climb ' + pdb.climbingProp);\nsend_command('climb '+ pdb.climbingProp);"}],"text":"cl (.+)"},{"type":"trigger","name":"","enabled":true,"id":11,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"That isn't something that may be climbed.","actions":[{"action":"script","script":"//Enter the script here\nif (pdb.climbTest) {\n    for (var i = 0, noe = pdb.items.length; i < noe; i++) {\n\t\tif (pdb.items[i].id == pdb.climbingProp) {\n            pdb.setClimb(pdb.items[i]['name'], false);\n        }\n    }\n\tpdb.climbTest = false;\n    pdb.climbingProp = '';\n}\n"}]},{"type":"trigger","name":"","enabled":true,"id":13,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You quickly climb up (.+)\\.","actions":[{"action":"script","script":"//Enter the script here\nif (pdb.climbTest) {\n    pdb.setClimb(args[1], true);\n\tpdb.climbTest = false;\n    pdb.climbingProp = '';\n}\n"}]},{"type":"alias","name":"","enabled":true,"id":14,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"pdb.reporting = pdb.reporting ? false : true\npdb.report('pdb report set to: '+pdb.reporting);"}],"text":"pdb report"},{"type":"alias","name":"","enabled":true,"id":15,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"pdb.report(pdb.coemph('Welcome to Prop Database. Valid commands are:'))\npdb.report(pdb.cofalse('============================================'))\npdb.report(pdb.cofalse('PDB ALL')+': Display the entire prop database.')\npdb.report(pdb.cofalse('PDB HERE')+': Display the props in the location')\npdb.report(pdb.cofalse('PDB REPORT')+': Toggle system reporting, useful when gathering data, off by default.')\npdb.report(pdb.cofalse('CL &lt;prop&gt;')+': Test whether a prop can be climbed. You must use the ID.');"}],"text":"pdb"}]}